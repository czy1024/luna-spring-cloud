<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.luna.order.mapper.OrderMapper">

    <resultMap type="com.luna.order.entity.Order" id="OrderResultMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="productId" column="product_id" jdbcType="INTEGER"/>
        <result property="count" column="count" jdbcType="INTEGER"/>
        <result property="money" column="money" jdbcType="NUMERIC"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="table_field">
      id, user_id, product_id, count, money, status      
    </sql>

    <!--通过Id查询单个-->
    <select id="getById" resultMap="OrderResultMap" parameterType="java.lang.Long">
        select
        <include refid="table_field"/>
        from tb_order
        where id = #{id,jdbcType=INTEGER}
    </select>


    <!--通过实体不为空的属性作为筛选条件查询列表-->
    <select id="listByEntity" resultMap="OrderResultMap" parameterType="com.luna.order.entity.Order">
        select
        <include refid="table_field"/>
        from tb_order
        <where>
            <if test="id != null">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=INTEGER}
            </if>
            <if test="productId != null">
                and product_id = #{productId,jdbcType=INTEGER}
            </if>
            <if test="count != null">
                and count = #{count,jdbcType=INTEGER}
            </if>
            <if test="money != null">
                and money = #{money,jdbcType=NUMERIC}
            </if>
            <if test="status != null">
                and status = #{status,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <!--通过实体不为空的属性作为筛选条件查询单个-->
    <select id="getByEntity" resultMap="OrderResultMap" parameterType="com.luna.order.entity.Order">
        select
        <include refid="table_field"/>
        from tb_order
        <where>
            <if test="id != null">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=INTEGER}
            </if>
            <if test="productId != null">
                and product_id = #{productId,jdbcType=INTEGER}
            </if>
            <if test="count != null">
                and count = #{count,jdbcType=INTEGER}
            </if>
            <if test="money != null">
                and money = #{money,jdbcType=NUMERIC}
            </if>
            <if test="status != null">
                and status = #{status,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <!--通过Id列表作为筛选条件查询列表，列表长度不为0-->
    <select id="listByIds" resultMap="OrderResultMap" parameterType="list">
        select
        <include refid="table_field"/>
        from tb_order
        where id in
        <foreach item="item" collection="list" separator="," open="(" close=")" index="index">
            #{item}
        </foreach>
    </select>

    <!--新增实体属性不为null的列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.luna.order.entity.Order">
        insert into tb_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="count != null">
                count,
            </if>
            <if test="money != null">
                money,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=INTEGER},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
            <if test="money != null">
                #{money,jdbcType=NUMERIC},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <!--批量新增所有列，列表长度不能为0，且列表id统一为null或者统一不为null-->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true" parameterType="list">
        insert into tb_order
        (id, user_id, product_id, count, money, status)
        values
        <foreach item="item" collection="list" separator="," open="" close="" index="index">
            (#{item.id,jdbcType=INTEGER}, #{item.userId,jdbcType=INTEGER}, #{item.productId,jdbcType=INTEGER},
            #{item.count,jdbcType=INTEGER}, #{item.money,jdbcType=NUMERIC}, #{item.status,jdbcType=INTEGER})
        </foreach>
    </insert>

    <!--通过主键修改实体属性不为null的列-->
    <update id="update" parameterType="com.luna.order.entity.Order">
        update tb_order
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="productId != null">
                product_id = #{productId,jdbcType=INTEGER},
            </if>
            <if test="count != null">
                count = #{count,jdbcType=INTEGER},
            </if>
            <if test="money != null">
                money = #{money,jdbcType=NUMERIC},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--通过表字段修改实体属性不为null的列-->
    <update id="updateByField">
        update tb_order
        <set>
            <if test="where.userId == null and set.userId != null">
                user_id = #{set.userId,jdbcType=INTEGER},
            </if>
            <if test="where.productId == null and set.productId != null">
                product_id = #{set.productId,jdbcType=INTEGER},
            </if>
            <if test="where.count == null and set.count != null">
                count = #{set.count,jdbcType=INTEGER},
            </if>
            <if test="where.money == null and set.money != null">
                money = #{set.money,jdbcType=NUMERIC},
            </if>
            <if test="where.status == null and set.status != null">
                status = #{set.status,jdbcType=INTEGER},
            </if>
        </set>
        <where>
            <if test="where.id != null">
                and id = #{where.id,jdbcType=INTEGER}
            </if>
            <if test="where.userId != null">
                and user_id = #{where.userId,jdbcType=INTEGER}
            </if>
            <if test="where.productId != null">
                and product_id = #{where.productId,jdbcType=INTEGER}
            </if>
            <if test="where.count != null">
                and count = #{where.count,jdbcType=INTEGER}
            </if>
            <if test="where.money != null">
                and money = #{where.money,jdbcType=NUMERIC}
            </if>
            <if test="where.status != null">
                and status = #{where.status,jdbcType=INTEGER}
            </if>
        </where>
    </update>

    <!--通过主键修改实体列表，列表长度不能为0，注意：当实体属性为null时，对应的列也会别更新为null-->
    <update id="updateBatch" parameterType="list">
        update tb_order
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="user_id = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id = #{item.id} then #{item.userId}
                </foreach>
            </trim>
            <trim prefix="product_id = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id = #{item.id} then #{item.productId}
                </foreach>
            </trim>
            <trim prefix="count = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id = #{item.id} then #{item.count}
                </foreach>
            </trim>
            <trim prefix="money = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id = #{item.id} then #{item.money}
                </foreach>
            </trim>
            <trim prefix="status = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id = #{item.id} then #{item.status}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>

    <!--通过主键删除-->
    <delete id="deleteById" parameterType="java.lang.Long">
        delete from tb_order where id = #{id,jdbcType=INTEGER}
    </delete>

    <!--通过实体非空属性删除-->
    <delete id="deleteByEntity" parameterType="com.luna.order.entity.Order">
        delete from tb_order
        <where>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=INTEGER}
            </if>
            <if test="productId != null">
                and product_id = #{productId,jdbcType=INTEGER}
            </if>
            <if test="count != null">
                and count = #{count,jdbcType=INTEGER}
            </if>
            <if test="money != null">
                and money = #{money,jdbcType=NUMERIC}
            </if>
            <if test="status != null">
                and status = #{status,jdbcType=INTEGER}
            </if>
        </where>
    </delete>

    <!--通过主键列表删除，列表长度不能为0-->
    <delete id="deleteByIds" parameterType="list">
        delete from tb_order where id in
        <foreach item="item" collection="list" separator="," open="(" close=")" index="index">
            #{item}
        </foreach>
    </delete>

    <select id="countAll" resultType="int">
        select count(id) from tb_order
    </select>

    <select id="countByEntity" parameterType="com.luna.order.entity.Order" resultType="int">
        select count(id) from tb_order
        <where>
            <if test="id != null">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=INTEGER}
            </if>
            <if test="productId != null">
                and product_id = #{productId,jdbcType=INTEGER}
            </if>
            <if test="count != null">
                and count = #{count,jdbcType=INTEGER}
            </if>
            <if test="money != null">
                and money = #{money,jdbcType=NUMERIC}
            </if>
            <if test="status != null">
                and status = #{status,jdbcType=INTEGER}
            </if>
        </where>
    </select>
</mapper>
